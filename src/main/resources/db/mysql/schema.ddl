CREATE TABLE IF NOT EXISTS time_keeper ( foundation VARCHAR(50), collection_time DATETIME, PRIMARY KEY( foundation, collection_time) );

CREATE TABLE IF NOT EXISTS organizations ( foundation VARCHAR(50), id VARCHAR(50) NOT NULL, org_name VARCHAR(250) NOT NULL, collection_time DATETIME NOT NULL, FOREIGN KEY (foundation, collection_time) REFERENCES time_keeper(foundation, collection_time), PRIMARY KEY (foundation, id, collection_time) );

CREATE TABLE IF NOT EXISTS spaces ( foundation VARCHAR(50), org_id VARCHAR(50) NOT NULL, space_id VARCHAR(50) NOT NULL, org_name VARCHAR(250) NOT NULL, space_name VARCHAR(250) NOT NULL, collection_time DATETIME NOT NULL, FOREIGN KEY (foundation, collection_time) REFERENCES time_keeper(foundation, collection_time), PRIMARY KEY (foundation, org_id, space_id, collection_time) );

CREATE TABLE IF NOT EXISTS application_detail ( foundation VARCHAR(50), organization VARCHAR(100), space VARCHAR(100), app_id VARCHAR(50), app_name VARCHAR(100), buildpack VARCHAR(500), buildpack_version VARCHAR(50), image VARCHAR(250), stack VARCHAR(25), running_instances INT, total_instances INT, memory_used BIGINT UNSIGNED, disk_used BIGINT UNSIGNED, memory_quota BIGINT UNSIGNED, disk_quota BIGINT UNSIGNED, urls VARCHAR(2000), last_pushed DATETIME, last_event VARCHAR(50), last_event_actor VARCHAR(100), last_event_time DATETIME, requested_state VARCHAR(25), buildpack_release_type VARCHAR(100), buildpack_release_date DATETIME, buildpack_latest_version VARCHAR(50), buildpack_latest_url VARCHAR(500), collection_time DATETIME NOT NULL, FOREIGN KEY (foundation, collection_time) REFERENCES time_keeper(foundation, collection_time), PRIMARY KEY (foundation, app_id, collection_time) );

CREATE TABLE IF NOT EXISTS service_instance_detail ( foundation VARCHAR(50), organization VARCHAR(100), space VARCHAR(100), service_instance_id VARCHAR(50), service_name VARCHAR(100), service VARCHAR(100), description VARCHAR(1000), plan VARCHAR(50), type VARCHAR(30), bound_applications VARCHAR(2000), last_operation VARCHAR(50), last_updated DATETIME, dashboard_url VARCHAR(250), requested_state VARCHAR(25), collection_time DATETIME NOT NULL, FOREIGN KEY (foundation, collection_time) REFERENCES time_keeper(foundation, collection_time), PRIMARY KEY (foundation, service_instance_id, collection_time) );

CREATE TABLE IF NOT EXISTS query_policy ( pk BIGINT NOT NULL AUTO_INCREMENT, id VARCHAR(50), description VARCHAR(1000), queries VARCHAR(2000), email_notification_template VARCHAR(2000), PRIMARY KEY(pk) );

CREATE TABLE IF NOT EXISTS application_relationship ( foundation VARCHAR(50), organization VARCHAR(100), space VARCHAR(100), app_id VARCHAR(50), app_name VARCHAR(100), service_instance_id VARCHAR(50), service_name VARCHAR(100), service_offering VARCHAR(100), service_plan VARCHAR(50), service_type VARCHAR(30), collection_time DATETIME NOT NULL, FOREIGN KEY (foundation, collection_time) REFERENCES time_keeper(foundation, collection_time), PRIMARY KEY (foundation, app_id, service_instance_id, collection_time) );

CREATE TABLE IF NOT EXISTS space_users ( foundation VARCHAR(50), organization varchar(100), space varchar(100), auditors VARCHAR(2000), managers VARCHAR(2000), developers VARCHAR(2000), collection_time DATETIME NOT NULL, FOREIGN KEY (foundation, collection_time) REFERENCES time_keeper(foundation, collection_time), PRIMARY KEY (foundation, organization, space, collection_time) );
